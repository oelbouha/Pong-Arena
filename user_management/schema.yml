openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
  /users/friends/:
    get:
      operationId: friendsUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
  /users/search/:
    get:
      operationId: searchUsersUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
  /users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - users
  /friend-requests/:
    get:
      operationId: listFriendRequests
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FriendRequest'
          description: ''
      tags:
      - friend-requests
    post:
      operationId: createFriendRequest
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequest'
          description: ''
      tags:
      - friend-requests
  /friend-requests/{id}/:
    get:
      operationId: retrieveFriendRequest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friend request.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequest'
          description: ''
      tags:
      - friend-requests
    put:
      operationId: updateFriendRequest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friend request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequest'
          description: ''
      tags:
      - friend-requests
    patch:
      operationId: partialUpdateFriendRequest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friend request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequest'
          description: ''
      tags:
      - friend-requests
    delete:
      operationId: destroyFriendRequest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friend request.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - friend-requests
  /friendships/:
    get:
      operationId: listFriendships
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Friendship'
          description: ''
      tags:
      - friendships
    post:
      operationId: createFriendship
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Friendship'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Friendship'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Friendship'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friendship'
          description: ''
      tags:
      - friendships
  /friendships/{id}/:
    get:
      operationId: retrieveFriendship
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friendship.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friendship'
          description: ''
      tags:
      - friendships
    put:
      operationId: updateFriendship
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friendship.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Friendship'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Friendship'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Friendship'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friendship'
          description: ''
      tags:
      - friendships
    patch:
      operationId: partialUpdateFriendship
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friendship.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Friendship'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Friendship'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Friendship'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friendship'
          description: ''
      tags:
      - friendships
    delete:
      operationId: destroyFriendship
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friendship.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - friendships
  /tournaments/:
    get:
      operationId: listTournaments
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tournament'
          description: ''
      tags:
      - tournaments
    post:
      operationId: createTournament
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tournament'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tournament'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
          description: ''
      tags:
      - tournaments
  /tournaments/{id}/:
    get:
      operationId: retrieveTournament
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tournament.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
          description: ''
      tags:
      - tournaments
    put:
      operationId: updateTournament
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tournament.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tournament'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tournament'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
          description: ''
      tags:
      - tournaments
    patch:
      operationId: partialUpdateTournament
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tournament.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tournament'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tournament'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
          description: ''
      tags:
      - tournaments
    delete:
      operationId: destroyTournament
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tournament.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - tournaments
  /tournaments/{id}/matches/:
    get:
      operationId: listMatchesTournament
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tournament.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
          description: ''
      tags:
      - tournaments
  /friend-requests/{id}/accept/:
    post:
      operationId: acceptFriendRequest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friend request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequest'
          description: ''
      tags:
      - friend-requests
  /friend-requests/{id}/decline/:
    post:
      operationId: declineFriendRequest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friend request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequest'
          description: ''
      tags:
      - friend-requests
  /tournaments/{id}/join/:
    post:
      operationId: joinTournamentTournament
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tournament.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tournament'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tournament'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
          description: ''
      tags:
      - tournaments
  /tournaments/{id}/kick-participant/{participant_id}/:
    post:
      operationId: kickParticipantTournament
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tournament.
        schema:
          type: string
      - name: participant_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tournament'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tournament'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
          description: ''
      tags:
      - tournaments
  /tournaments/{id}/leave/:
    post:
      operationId: leaveTournamentTournament
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tournament.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tournament'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tournament'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
          description: ''
      tags:
      - tournaments
  /tournaments/{id}/lock/:
    post:
      operationId: lockTournamentTournament
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tournament.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tournament'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tournament'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
          description: ''
      tags:
      - tournaments
  /tournaments/{id}/start-round/:
    post:
      operationId: startRoundTournament
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tournament.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tournament'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tournament'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
          description: ''
      tags:
      - tournaments
  /users/update-profile/:
    patch:
      operationId: updateProfileUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
  /friend-requests/{id}/remove/:
    delete:
      operationId: removeFriendRequest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friend request.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - friend-requests
  /friendships/remove_friend/:
    delete:
      operationId: removeFriendFriendship
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - friendships
  /tournaments/{id}/delete/:
    delete:
      operationId: deleteTournamentTournament
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tournament.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - tournaments
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        profile_image:
          type: string
          format: binary
          nullable: true
        date_joined:
          type: string
          format: date-time
        is_active:
          type: boolean
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_staff:
          type: boolean
          description: Designates whether the user can log into this admin site.
        level:
          type: integer
          maximum: 2147483647
          minimum: 0
        exp:
          type: integer
          maximum: 2147483647
          minimum: 0
        win_streak:
          type: integer
          maximum: 2147483647
          minimum: 0
        won:
          type: integer
          maximum: 2147483647
          minimum: 0
        lost:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - username
    FriendRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        from_user:
          type: integer
        to_user:
          type: integer
        accepted:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - from_user
      - to_user
    Friendship:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user1:
          type: integer
        user2:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - user1
      - user2
    Tournament:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        capacity:
          type: integer
          maximum: 32767
          minimum: -32768
        type:
          enum:
          - PUB
          - PRV
          type: string
        created_by:
          type: string
          readOnly: true
        participants_count:
          type: integer
          readOnly: true
      required:
      - name
