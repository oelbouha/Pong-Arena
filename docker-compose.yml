version: "3"

services:
  apisix:
    image: "apache/apisix"
    restart: always
    volumes:
      - ./api_gateway/config/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    ports:
      - "9180:9180/tcp"
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
    networks:
      - apisix

  dashboard:
    image: "apache/apisix-dashboard:latest"
    restart: always
    volumes:
      - ./api_gateway/config/dashboard.yaml:/usr/local/apisix-dashboard/conf/conf.yaml:ro
    depends_on:
      - etcd
    ports:
      - "9000:9000/tcp"
    networks:
      - apisix

  auth:
    image: "python"
    entrypoint: ./entrypoint.sh
    working_dir: /app/
    restart: always
    env_file:
      - ./config/.env.common
      - ./config/.env.auth
    depends_on:
      pgsql:
        condition: service_healthy
    volumes:
      - ./auth/:/app
    networks:
      - apisix

  management:
    image: "python"
    entrypoint: ./entrypoint.sh
    working_dir: /app/
    restart: always
    env_file:
      - ./config/.env.common
      - ./config/.env.user.management
    depends_on:
      pgsql:
        condition: service_healthy
    volumes:
      - ./user_management/:/app
    networks:
      - apisix

  chat:
    image: "python"
    entrypoint: ./entrypoint.sh
    working_dir: /app/
    restart: always
    env_file:
      - ./config/.env.common
      - ./config/.env.chat
    volumes:
      - ./chat/:/app
    depends_on:
      pgsql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - apisix
  
  games:
    image: "python"
    entrypoint: ./entrypoint.sh
    working_dir: /app/
    restart: unless-stopped
    env_file:
      - ./config/.env.common
      - ./config/.env.games
    volumes:
      - ./games/:/app
    depends_on:
      pgsql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - apisix

  frontend:
    build: ./frontend
    working_dir: /app/
    restart: always
    volumes:
      - ./frontend/:/app
      - ./user_management/media:/app/media
      - ./chat/media:/app/media/chat
      - ./frontend/spa.conf:/etc/nginx/conf.d/ft_transcendence.conf
    networks:
      - apisix

  redis:
    image: redis/redis-stack-server
    restart: unless-stopped
    networks:
      - apisix
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

  pgsql:
    image: postgres:17.0
    restart: always
    env_file:
      - ./config/.env.common
    volumes:
      - ./data/pgsql:/var/lib/postgresql/data
    networks:
      - apisix
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]


  etcd:
    image: bitnami/etcd:3.4.9
    user: root
    restart: always
    volumes:
      - ./data/etcd:/etcd_data
    environment:
      ETCD_DATA_DIR: /etcd_data
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    ports:
      - "2379:2379/tcp"
    networks:
      - apisix

  pgadmin:
    image: elestio/pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./data/pgsql:/var/lib/postgresql/data
    depends_on:
      - pgsql
    ports:
      - 5011:80
    networks:
      - apisix
    links:
      - pgsql:pgsql-server


networks:
  apisix:
    driver: bridge